#!/usr/bin/python3

glyph_data=[
    # 0
    0b00111100,
    0b01100110,
    0b01101110,
    0b01111110,
    0b01110110,
    0b01100110,
    0b00111100,
    0b00000000,

    # 1
    0b00011000,
    0b00111000,
    0b00011000,
    0b00011000,
    0b00011000,
    0b00011000,
    0b01111110,
    0b00000000,

    # 2
    0b00111100,
    0b01100110,
    0b00000110,
    0b00001100,
    0b00011000,
    0b00110000,
    0b01111110,
    0b00000000,

    # 3
    0b00111100,
    0b01100110,
    0b00000110,
    0b00011100,
    0b00000110,
    0b01100110,
    0b00111100,
    0b00000000,

    # 4
    0b00001100,
    0b00011100,
    0b00111100,
    0b01101100,
    0b01111110,
    0b00001100,
    0b00001100,
    0b00000000,

    # 5
    0b01111110,
    0b01100000,
    0b01111100,
    0b00000110,
    0b00000110,
    0b01100110,
    0b00111100,
    0b00000000,

    # 6
    0b00011100,
    0b00110000,
    0b01100000,
    0b01111100,
    0b01100110,
    0b01100110,
    0b00111100,
    0b00000000,

    # 7
    0b01111110,
    0b00000110,
    0b00001100,
    0b00011000,
    0b00110000,
    0b00110000,
    0b00110000,
    0b00000000,

    # 8
    0b00111100,
    0b01100110,
    0b01100110,
    0b00111100,
    0b01100110,
    0b01100110,
    0b00111100,
    0b00000000,

    # 9
    0b00111100,
    0b01100110,
    0b01100110,
    0b00111110,
    0b00000110,
    0b00001100,
    0b00111000,
    0b00000000,

    # A
    0b00111100,
    0b01100110,
    0b01100110,
    0b01111110,
    0b01100110,
    0b01100110,
    0b01100110,
    0b00000000,

    # B
    0b01111100,
    0b01100110,
    0b01100110,
    0b01111100,
    0b01100110,
    0b01100110,
    0b01111100,
    0b00000000,

    # C
    0b00111100,
    0b01100110,
    0b01100000,
    0b01100000,
    0b01100000,
    0b01100110,
    0b00111100,
    0b00000000,

    # D
    0b01111000,
    0b01101100,
    0b01100110,
    0b01100110,
    0b01100110,
    0b01101100,
    0b01111000,
    0b00000000,

    # E
    0b01111110,
    0b01100000,
    0b01100000,
    0b01111100,
    0b01100000,
    0b01100000,
    0b01111110,
    0b00000000,

    # F
    0b01111110,
    0b01100000,
    0b01100000,
    0b01111100,
    0b01100000,
    0b01100000,
    0b01100000,
    0b00000000,
]

def main():

    num_rows=8
    assert len(glyph_data)%num_rows==0
    num_glyphs=len(glyph_data)//num_rows

    labels=[]
    for row in range(num_rows):
        label='glyphs_row_%d'%row
        print('%s:'%label)
        labels.append(label)
        for glyph in range(num_glyphs):
            for x in range(8):
                value='$ff' if (glyph_data[glyph*8+row]&1<<x)!=0 else '0'
                print('    .byte %s'%value)

    print('glyphs_rows=[%s]'%','.join(labels))

if __name__=='__main__': main()
